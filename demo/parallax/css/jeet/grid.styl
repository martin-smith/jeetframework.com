// Grid Settings
gutter = 3
parent_first = false
layout_direction = LTR

// Columns with Gutters
column(ratios = 1, offset = 0, cycle = 0, uncycle = 0)
    side = get_layout_direction()
    widths = get_column(ratios)
    margin_l = margin_last = 0
    margin_r = widths[1]
    unless offset == 0
        if offset < 0
            offset *= -1
            offset = get_column(offset, widths[1])[0]
            margin_r = margin_last = offset + widths[1] * 2
        else
            offset = get_column(offset, widths[1])[0]
            margin_l = offset + widths[1]
    @extends $cf
    float side
    width (widths[0])%
    margin-{side} (margin_l)%
    margin-{opposite-position(side)} (margin_r)%
    if uncycle != 0
        &:nth-child({uncycle}n)
            margin-{opposite-position(side)} (margin_r)%
            float side
    if cycle != 0
        &:nth-child({cycle}n)
            margin-{opposite-position(side)} (margin_last)%
            float opposite-position(side)
    else
        &:last-child
            margin-{opposite-position(side)} (margin_last)%

// Columns without Gutters
span(ratio = 1, offset = 0)
    side = get_layout_direction()
    width = get_span(ratio)
    margin_l = margin_r = 0
    unless offset == 0
        if offset < 0
            offset *= -1
            margin_r = get_span(offset)
        else
            margin_l = get_span(offset)
    @extends $cf
    float side
    width (width)%
    margin-{side} (margin_l)%
    margin-{opposite-position(side)} (margin_r)%

// Source Ordering
shift(ratios = 0, col_or_span = column)
    side = get_layout_direction()
    if side == right
        ratios = replace_nth(ratios, 0, ratios[0] * -1)
    if col_or_span == column or col_or_span == col or col_or_span == c
        widths = get_column(ratios)
        translate = widths[0] + widths[1]
    else
        translate = get_span(ratios)
    position relative
    left (translate)%
unshift()
    position static
    left 0